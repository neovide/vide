name: CI

on:
  push:
    branches:
      - ci

defaults:
  run:
    shell: bash

env:
  FONTS: "Monaspace FiraCode ProFont CascadiaCode Noto"
  BREW_FONTS: "font-monaspace font-fira-code-nerd-font font-profont-nerd-font font-caskaydia-cove-nerd-font font-monaspace-nerd-font font-noto-nerd-font"
  VERSION: "v3.2.1"
  EXTENSION: ".zip"

jobs:
  fmt:
    name: cargo fmt
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@v4

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt

      - name: cargo fmt
        run: cargo fmt --all --check

  clippy:
    name: cargo clippy
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@v4

      - name: restore cache
        uses: Swatinem/rust-cache@v2

      - name: install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy

      - name: Show toolchain info
        run: cargo --version --verbose

      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}

  event-upload:
    needs: test
    name: Upload Test Event
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact@v4
        with:
          name: test-event
          path: ${{ github.event_path }}

  test:
    name: cargo test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@v4

      - name: restore cache
        uses: Swatinem/rust-cache@v2

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: install Mesa
        run: |
          if [[ $RUNNER_OS == "Linux" ]]; then
            sudo add-apt-repository ppa:kisak/kisak-mesa
            sudo apt update
            sudo apt upgrade

            sudo add-apt-repository ppa:oibaf/graphics-drivers
            sudo apt update
            sudo apt upgrade
          fi

      - name: Install Fonts
        run: |
          declare -a fonts=(
            "Monaspace"
            "FiraCode"
            "ProFont"
            "CascadiaCode"
            "Noto"
          )
          if [[ $RUNNER_OS == "macOS" ]]; then
            curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh && brew upgrade
            brew install ${{ env.BREW_FONTS }}
          elif [[ $RUNNER_OS == "Linux" ]]; then
            FONT_DIR="${HOME}/.local/share/fonts"
            mkdir -p "$FONT_DIR"

            for font in ${{ env.FONTS }}; do
              ZIP_FILE="${font}${EXTENSION}"
              if [[ "$font" == "Monaspace" ]]; then
                DOWNLOAD_URL="https://github.com/githubnext/monaspace/releases/download/v1.101/monaspace-v1.101.zip"
              else
                DOWNLOAD_URL="https://github.com/ryanoasis/nerd-fonts/releases/download/${VERSION}/${ZIP_FILE}"
              fi
              echo "Downloading and installing '$font'..."
              wget --quiet "$DOWNLOAD_URL" -O "$ZIP_FILE"
              unzip -oq "$ZIP_FILE" -d "$FONT_DIR"
              rm "$ZIP_FILE"
              echo "'$font' installed successfully."
            done

            # Refresh font cache
            fc-cache -fv
          fi

      - name: cargo test
        run: RUST_BACKTRACE=1 cargo test --workspace --locked --all-features

  build:
    name: cargo build
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        toolchain: [stable, nightly]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --locked --release
